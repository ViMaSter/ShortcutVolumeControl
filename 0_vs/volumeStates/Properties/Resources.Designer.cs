//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace VolumeStates.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("VolumeStates.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to state cannot be applied - invariant supplied.
        /// </summary>
        internal static string ApplyState_state_cannot_be_applied___invariant_supplied {
            get {
                return ResourceManager.GetString("ApplyState_state_cannot_be_applied___invariant_supplied", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to connect to game client. The tool was unable to find the expected memory-pattern for the cutscene-flag. Ensure the game is running and the version of FFXIV is compatible with this tool..
        /// </summary>
        internal static string COULDNT_FIND_MEMORY_LOCATION_CONTENT {
            get {
                return ResourceManager.GetString("COULDNT_FIND_MEMORY_LOCATION_CONTENT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No valid memory location.
        /// </summary>
        internal static string COULDNT_FIND_MEMORY_LOCATION_TITLE {
            get {
                return ResourceManager.GetString("COULDNT_FIND_MEMORY_LOCATION_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot deserialize app settings; provided JSON blob is null.
        /// </summary>
        internal static string DeserializePerAppVolumeStates__Cannot_deserialize_app_settings__provided_JSON_blob_is_null {
            get {
                return ResourceManager.GetString("DeserializePerAppVolumeStates: Cannot_deserialize_app_settings__provided_JSON_blo" +
                        "b_is_null", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to OnPreviewFadeSpeedInput shall only be called from the UI and therefore &apos;sender&apos; mustn&apos;t be null.
        /// </summary>
        internal static string OnPreviewFadeSpeedInput_OnPreviewFadeSpeedInput_shall_only_be_called_from_the_UI_and_therefore__sender__mustn_t_be_null {
            get {
                return ResourceManager.GetString("OnPreviewFadeSpeedInput_OnPreviewFadeSpeedInput_shall_only_be_called_from_the_UI_" +
                        "and_therefore__sender__mustn_t_be_null", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
        /// </summary>
        internal static System.Drawing.Icon Refresh {
            get {
                object obj = ResourceManager.GetObject("Refresh", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
    }
}
